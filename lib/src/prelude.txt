abs :: Num -> Num
	struct Abs1 : Fun;
	struct Abs0 : Num;

add :: Num -> Num -> Num
	struct Add2 : Fun;
	struct Add1 : Fun;
	struct Add0 : Num;

flip :: (a -> b -> c) -> b -> a -> c
  struct Flip2 : Fun;
  struct Flip1 : Fun;
  struct Flip0 : Fun;

join:: Str -> [Str]* -> Str*
	struct Join2 : Fun;
	struct Join1 : Fun;
	struct Join0 : Str;

map:: (a -> b) -> [a]* -> [b]*
	struct Map2 : Fun;
	struct Map1 : Fun;
	struct Map0 : Lst;

split :: Str -> Str* -> [Str]*
	struct Split2 : Fun;
	struct Split1 : Fun;
	struct Split0 : Lst;

sub :: Num -> Num -> Num
	struct Sub2 : Fun;
	struct Sub1 : Fun;
	struct Sub0 : Num;

tonum :: Str -> Num
	struct Tonum1 : Fun;
	struct Tonum0 : Num;

tostr :: Num -> Str
	struct Tostr1 : Fun;
	struct Tostr0 : Str;
